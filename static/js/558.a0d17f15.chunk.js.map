{"version":3,"file":"static/js/558.a0d17f15.chunk.js","mappings":"qNASA,SAASA,IACP,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KACXC,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAIIC,EAAAA,EAAAA,MAHFC,MACEC,SAAYC,EAFhB,EAEgBA,OAAQC,EAFxB,EAEwBA,UAAWC,EAFnC,EAEmCA,QAASC,EAF5C,EAE4CA,QAsB5C,OAJAC,EAAAA,EAAAA,YAAU,WACRX,EAAS,CAAEY,KAAM,eAAgBC,MAAO,OACvC,CAACb,KAGF,UAACc,EAAEC,UAAH,YACE,SAACD,EAAEE,SAAH,WACE,SAACF,EAAEG,MAAH,4FAEF,SAAC,KAAD,CAAWL,KAAK,YAAYF,QAASA,EAASQ,WAAYX,EAAQY,cAAeX,EAAWC,QAASA,KACrG,SAACK,EAAEM,0BAAH,WACE,SAACN,EAAEO,KAAH,WACE,SAACP,EAAEQ,eAAH,CAAkBC,IAAKrB,SAG3B,SAAC,KAAD,CACEsB,WAAW,EACXC,YAAa,kBA/BC,SAAAC,GAClB,GAA8C,IAA1CxB,EAAUyB,QAAQC,MAAMC,OAAOC,OAGjC,OAFA5B,EAAUyB,QAAQI,aAClBC,MAAM,0EAIRhC,EAAS,CACPY,KAAM,WACNqB,KAAMP,IAER5B,EAAS,KAqBH2B,CAAY,CACVlB,OAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAwB,KAAMhC,EAAUyB,QAAQC,SAG5BO,KAAM,oBAMd,UAAeC,EAAAA,KAAWvC,GAE1B,IAAMkB,EAAYsB,EAAAA,GAAAA,IAAH,8HAQTpB,EAAQoB,EAAAA,GAAAA,KAAH,uFAMLrB,EAAWqB,EAAAA,GAAAA,IAAH,8HAQRvB,GAAC,kBAAQwB,GAAR,IAAgBvB,UAAAA,EAAWE,MAAAA,EAAOD,SAAAA","sources":["pages/CardAddComplete.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { CardShape, TextNav } from '../components';\nimport * as Common from '../components/common/styles';\n\nimport useDispatch from '../hooks/useDispatch';\n\nfunction CardAddComplete() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const targetRef = useRef(null);\n  const {\n    state: {\n      cardInfo: { number, ownerName, dueDate, company },\n    },\n  } = useLocation();\n\n  const handleClick = data => {\n    if (targetRef.current.value.trim().length === 0) {\n      targetRef.current.focus();\n      alert('카드 이름을 입력해 주세요.');\n      return;\n    }\n\n    dispatch({\n      type: 'ADD_CARD',\n      card: data,\n    });\n    navigate(`/`);\n  };\n\n  useEffect(() => {\n    dispatch({ type: 'HEADER_TITLE', title: '' });\n  }, [dispatch]);\n\n  return (\n    <S.Container>\n      <S.TitleBox>\n        <S.Title>카드등록이 완료되었습니다.</S.Title>\n      </S.TitleBox>\n      <CardShape type=\"USER_CARD\" company={company} cardNumber={number} cardOwnerName={ownerName} dueDate={dueDate} />\n      <S.UnderLineInputWrapperForm>\n        <S.Span>\n          <S.underLineInput ref={targetRef} />\n        </S.Span>\n      </S.UnderLineInputWrapperForm>\n      <TextNav\n        isVisible={true}\n        handleClick={() =>\n          handleClick({\n            number,\n            ownerName,\n            dueDate,\n            company,\n            name: targetRef.current.value,\n          })\n        }\n        text={'확인'}\n      />\n    </S.Container>\n  );\n}\n\nexport default React.memo(CardAddComplete);\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.span`\n  font-family: 400;\n  font-size: 24px;\n  line-height: 28px;\n`;\n\nconst TitleBox = styled.div`\n  width: 100%;\n  height: 30%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst S = { ...Common, Container, Title, TitleBox };\n"],"names":["CardAddComplete","navigate","useNavigate","dispatch","useDispatch","targetRef","useRef","useLocation","state","cardInfo","number","ownerName","dueDate","company","useEffect","type","title","S","Container","TitleBox","Title","cardNumber","cardOwnerName","UnderLineInputWrapperForm","Span","underLineInput","ref","isVisible","handleClick","data","current","value","trim","length","focus","alert","card","name","text","React","styled","Common"],"sourceRoot":""}